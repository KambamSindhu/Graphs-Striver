// User function Template for Java

class Solution {

    int countDistinctIslands(int[][] grid) {
       
       HashSet<ArrayList<String>> set=new HashSet<>();
       int n=grid.length;
       int m=grid[0].length;
       
       boolean vis[][]=new boolean[n][m];
       for(int i=0;i<n;i++)
       {
           for(int j=0;j<m;j++)
           {
               if(!vis[i][j] && grid[i][j]==1)
               {
                   ArrayList<String> list=new ArrayList<>();
                   dfs(i,j,vis,grid,i,j,list);
                   set.add(list);
               }
           }
       }
       
       return set.size();
        
    }
    public void dfs(int row,int col,boolean vis[][], int grid[][],int row0,int col0, ArrayList<String> list)
    {
        vis[row][col]=true;
        list.add(coordString(row-row0,col-col0));
        
        int delrow[]={-1,0,1,0};
       int delcol[] = {0, 1, 0, -1};
        int n=grid.length;
       int m=grid[0].length;
        for(int x=0;x<4;x++)
        {
            int nrow=delrow[x]+row;
            int ncol=delcol[x]+col;
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m &&
            !vis[nrow][ncol] && grid[nrow][ncol]==1){
                dfs(nrow,ncol,vis,grid,row0,col0,list);
            }
        }
    }
    public String coordString(int row,int col)
    {
        String str=row+" "+col;
        return str;
    }
}
