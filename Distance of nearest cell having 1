class Solution {
   
   class Pair{
       int row;
       int col;
       int dis;
       public Pair(int row,int col,int dis)
       {
           this.row=row;
           this.col=col;
           this.dis=dis;
       }
   }
    public int[][] nearest(int[][] grid) {
     
     int n=grid.length;
     int m=grid[0].length;
     boolean[][] vis =new  boolean[n][m];
     int[][] dis=new int[n][m];
     
  
       
       Queue<Pair> q=new LinkedList<>();
       
       for(int i=0;i<n;i++)
       {
           for(int j=0;j<m;j++)
           {
               if(grid[i][j]==1)
               {
                q.add(new Pair(i,j,0));
                vis[i][j]=true;
               }
           }
       }
       
       int delrow[]={-1,0,1,0};
       int delcol[]={0,1,0,-1};
       while(q.size()>0)
       {
           Pair rem = q.remove();
           int r=rem.row;
           int c=rem.col;
           int d=rem.dis;
        
        dis[r][c]=d;
        for(int i=0;i<4;i++)
        {
                int nrow=r+delrow[i];
                int ncol=c+delcol[i];
               
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m 
            && !vis[nrow][ncol])
            {
                vis[nrow][ncol]=true;
                q.add(new Pair(nrow,ncol,d+1));
            }
        }
           }
            return dis;
       
    }
}
