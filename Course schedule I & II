class Solution {
    public static ArrayList<Integer> findOrder(int n, int[][] prerequisites) {
     
     ArrayList<Integer> ans=new ArrayList<>();
     ArrayList<ArrayList<Integer>> adj=new ArrayList<>();
     int indegree[]=new int[n];
     Queue<Integer> q =new LinkedList<>();
     for(int i=0;i<n;i++)
     {
         adj.add(new ArrayList<Integer>());
     }
     
     for(int i=0;i<prerequisites.length;i++)
     {
         int u=prerequisites[i][0];
         int v=prerequisites[i][1];
         adj.get(v).add(u);
         indegree[u]++;
     }
     
     for(int i=0;i<n;i++)
     {
         if(indegree[i]==0)
         {
             
             q.add(i);
         }
     }
     while(q.size()>0)
     {
         int rem=q.remove();
         ans.add(rem);
        
         for(int it:adj.get(rem))
         {
             indegree[it]--;
             if (indegree[it] == 0) {
                    q.add(it);
                }
         }
     }
    
     return ans;
    }
}
